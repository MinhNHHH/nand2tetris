// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
		DMux8Way(in=load, sel=address[11..13], a=a1, b=b1, c=c1, d=d1, e=e1, f=f1, g=g1, h=h1);
		RAM4K(in=in, load=a1, address=address[0..11], out=out1);
		RAM4K(in=in, load=b1, address=address[0..11], out=out2);
		RAM4K(in=in, load=c1, address=address[0..11], out=out3);
		RAM4K(in=in, load=d1, address=address[0..11], out=out4);
		RAM4K(in=in, load=e1, address=address[0..11], out=out5);
		RAM4K(in=in, load=f1, address=address[0..11], out=out6);
		RAM4K(in=in, load=g1, address=address[0..11], out=out7);
		RAM4K(in=in, load=h1, address=address[0..11], out=out8);
		Mux8Way16(a=out1, b=out2, c=out3, d=out4, e=out5, f=out6, g=out7, h=out8, sel=address[11..13], out=out);
}